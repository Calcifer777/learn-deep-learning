"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1749],{3905:(e,a,t)=>{t.d(a,{Zo:()=>o,kt:()=>d});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function s(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?s(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function p(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var m=n.createContext({}),l=function(e){var a=n.useContext(m),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},o=function(e){var a=l(e.components);return n.createElement(m.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},h=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,s=e.originalType,m=e.parentName,o=p(e,["components","mdxType","originalType","parentName"]),h=l(t),d=r,k=h["".concat(m,".").concat(d)]||h[d]||c[d]||s;return t?n.createElement(k,i(i({ref:a},o),{},{components:t})):n.createElement(k,i({ref:a},o))}));function d(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var s=t.length,i=new Array(s);i[0]=h;var p={};for(var m in a)hasOwnProperty.call(a,m)&&(p[m]=a[m]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var l=2;l<s;l++)i[l]=t[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}h.displayName="MDXCreateElement"},7423:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>m,contentTitle:()=>i,default:()=>c,frontMatter:()=>s,metadata:()=>p,toc:()=>l});var n=t(7462),r=(t(7294),t(3905));const s={sidebar_position:1,sidebar_label:"Introduction"},i="Intro",p={unversionedId:"graphs/introduction",id:"graphs/introduction",title:"Intro",description:"General concepts, terms, and applications",source:"@site/docs/graphs/01-introduction.mdx",sourceDirName:"graphs",slug:"/graphs/introduction",permalink:"/learn-deep-learning/docs/graphs/introduction",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Introduction"},sidebar:"tutorialSidebar",previous:{title:"Graphs",permalink:"/learn-deep-learning/docs/category/graphs"},next:{title:"Traditional Graph Analysis",permalink:"/learn-deep-learning/docs/graphs/traditional-graph-analysis"}},m={},l=[{value:"Graph Neural Networks characteristics",id:"graph-neural-networks-characteristics",level:2},{value:"Tasks",id:"tasks",level:2},{value:"Terms",id:"terms",level:2},{value:"Graph representation",id:"graph-representation",level:2},{value:"Node and edge attributes",id:"node-and-edge-attributes",level:2},{value:"Graph connectivity",id:"graph-connectivity",level:2},{value:"Strongly vs weakly connected graph",id:"strongly-vs-weakly-connected-graph",level:3}],o={toc:l};function c(e){let{components:a,...t}=e;return(0,r.kt)("wrapper",(0,n.Z)({},o,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"intro"},"Intro"),(0,r.kt)("p",null,"General concepts, terms, and applications"),(0,r.kt)("h2",{id:"graph-neural-networks-characteristics"},"Graph Neural Networks characteristics"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Arbitrary size and complex topological structure (i.e. no spatial locality like grids)"),(0,r.kt)("li",{parentName:"ul"},"No fixed node ordering or reference point"),(0,r.kt)("li",{parentName:"ul"},"Ofter dynamic and have multimodal features")),(0,r.kt)("p",null,"Representation learning: automatically extracting features in a graph. That is, mapping nodes to d-dimensional embeddings such that similar nodes in the network are embedded close together."),(0,r.kt)("h2",{id:"tasks"},"Tasks"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Node classification: protein folding"),(0,r.kt)("li",{parentName:"ul"},"Link prediction: recommender systems, drug side effects"),(0,r.kt)("li",{parentName:"ul"},"Graph classification: molecule property prediction, traffic prediction"),(0,r.kt)("li",{parentName:"ul"},"Clustering: social circle detection"),(0,r.kt)("li",{parentName:"ul"},"Graph generation: drug discovery, molecule generation / optimization"),(0,r.kt)("li",{parentName:"ul"},"Graph evolution: physical simulation")),(0,r.kt)("h2",{id:"terms"},"Terms"),(0,r.kt)("p",null,"Bipartite graph: graph whose nodes can be divided into two disjoint sets ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"U")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"U")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6833em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10903em"}},"U")))))," and ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"V")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"V")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6833em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.22222em"}},"V")))))," such that every link connects a node in ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"U")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"U")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6833em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10903em"}},"U")))))," to one in ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"V")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"V")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6833em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.22222em"}},"V"))))),"; that is ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"U")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"U")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6833em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10903em"}},"U")))))," and ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"V")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"V")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6833em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.22222em"}},"V")))))," are independent sets."),(0,r.kt)("p",null,"Folded/Projected bipartite graphs: given a bipartite graph, a (network) projection of that graph can be created by linking each node on one set with all others that share a link with the other set."),(0,r.kt)("h2",{id:"graph-representation"},"Graph representation"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Adjacency matrix"),(0,r.kt)("li",{parentName:"ul"},"List of edges"),(0,r.kt)("li",{parentName:"ul"},"Adjacency list")),(0,r.kt)("h2",{id:"node-and-edge-attributes"},"Node and edge attributes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Weight"),(0,r.kt)("li",{parentName:"ul"},"Ranind"),(0,r.kt)("li",{parentName:"ul"},"Type"),(0,r.kt)("li",{parentName:"ul"},"Sign"),(0,r.kt)("li",{parentName:"ul"},"Other:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"properties depending on the structure of the rest of the graph (e.g. number of common friends)")))),(0,r.kt)("h2",{id:"graph-connectivity"},"Graph connectivity"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The adjacency matrix of a network with several components can be written in a block-diagonal form")),(0,r.kt)("h3",{id:"strongly-vs-weakly-connected-graph"},"Strongly vs weakly connected graph"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Strongly connected: for every pair of nodes there is a path connecting them"),(0,r.kt)("li",{parentName:"ul"},"Weakly connected: the graph is connected is we disregard the edge directions")))}c.isMDXComponent=!0}}]);